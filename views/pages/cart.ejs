<style>
    #body-container{
        display: flex;
        justify-content: center;
        background-color: #f5f5f5;
    }
    .cart-container {
        background: white;
        width: 60%;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        margin: 20px;
    }
    .cart-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;
        padding: 10px 20px;
        border-radius: 5px;
    }
    button {
        padding: 10px 15px;
        border: none;
        border-radius: 5px;
        background-color: burlywood;
        color: white;
        cursor: pointer;
        transition: background-color 0.3s;
    }
    button:hover {
        background-color: bisque;
    }
    .checkout-btn {
        width: 100%;
        margin-top: 20px;
    }
    .total-display {
        margin-top: 20px;
        font-size: 20px;
        font-weight: bold;
    }
</style>
<div id="body-container">
    <div class="cart-container">
        <h1>Your Shopping Cart</h1>
        <div id="cartItems"></div>
        <div class="total-display"></div>
        
        <button id="checkout-btn" class="checkout-btn">Checkout</button>
        
    </div>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const cart = JSON.parse(localStorage.getItem('cart')) || [];
        const cartItemsContainer = document.getElementById('cartItems');
        const totalDisplay = document.querySelector('.total-display');

        function getProductDetails(itemId) {
            const products = {
                '1': { name: 'Sourdough Bread', price: 5.99 },
                '2': { name: 'Brownie', price: 2.49 },
                '3': { name: 'Croissant', price: 3.47 },
                '4': { name: 'Bagel', price: 1.99 },
                '5': { name: 'Pumpkin Pie', price: 12.99 },
                '6': { name: 'Donut', price: 2.99 },
                '7': { name: 'Baguette', price: 3.49 },
                '8': { name: 'Scone', price: 4.99 }
            };
            return products[itemId];
        }

        function updateCartDisplay() {
            if (cart.length === 0) {
                cartItemsContainer.innerHTML = '<p>Your cart is empty.</p>';
                totalDisplay.textContent = '';
            } else {
                let total = 0;
                cartItemsContainer.innerHTML = cart.map((item, index) => {
                    const product = getProductDetails(item.id);
                    const subtotal = product.price * item.quantity;
                    total += subtotal;
                    return `
                        <div class="cart-item">
                            <div>
                                <h4>${product.name}</h4>
                                <p>Price: $${product.price.toFixed(2)}</p>
                                <p>Quantity: ${item.quantity}</p>
                                <p>Subtotal: $${subtotal.toFixed(2)}</p>
                            </div>
                            <button onclick="removeItem(${index})">Delete</button>
                        </div>
                    `;
                }).join('');
                totalDisplay.textContent = `Total: $${total.toFixed(2)}`;
            }
        }

        window.removeItem = function(index) {
            cart.splice(index, 1);
            localStorage.setItem('cart', JSON.stringify(cart));
            updateCartDisplay();
        };

        updateCartDisplay();
    });

    // Example using Fetch API

    document.getElementById('checkout-btn').addEventListener('click', function(event) {
    event.preventDefault(); // Prevent the default form submission
    const cartItems = JSON.parse(localStorage.getItem('cart')) || [];
    console.log('cart')
    const username = sessionStorage.getItem('username');
    
    fetch('/checkout', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            username: username,
            cartItems: cartItems.map (item => ({
            productId: parseInt(item.id), // Ensure this matches your database field
                quantity: item.quantity
            }))

                
        }),
    })
    .then(response => response.json())
    .then(data => {
        if (data.status === 'success') {
            console.log('Order processed successfully');
            alert('Order processed successfully');
            localStorage.removeItem('cart');
            window.location.href = '/shop'; // Redirect to a success page
        } else {
            console.error('Order processing failed:', data.message);
        }
    })
    .catch(error => console.error('Error:', error));
});

</script>
